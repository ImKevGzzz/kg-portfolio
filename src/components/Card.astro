---
import AstroJsIcon from "../Icons/TechnologiesIcons/AstroJsIcon.astro";
import CardSvg from "../Icons/CardSvg.astro";
import DrupalIcon from "../Icons/TechnologiesIcons/DrupalIcon.astro";
import FigmaIcon from "../Icons/TechnologiesIcons/FigmaIcon.astro";
import GatbsyJsIcon from "../Icons/TechnologiesIcons/GatsbyJsIcon.astro";
import GrapgQLIcon from "../Icons/TechnologiesIcons/GraphQLIcon.astro";
import NextJsIcon from "../Icons/TechnologiesIcons/NextJsIcon.astro";
import ProjectImage1 from "../../public/projectsImages/Project1.webp";
import ProjectImage2 from "../../public/projectsImages/Project2.webp";
import ProjectImage3 from "../../public/projectsImages/Project3.webp";
import { getI18n } from "@src/i18n";

const {currentLocale} = Astro;
const i18n = getI18n({currentLocale});

const ICONS = {
    Project1: {
        techIcons: {
            drupalIcon: DrupalIcon,
            nextIcon: NextJsIcon,
            figmaIcon: FigmaIcon,
        }
    },
    Project2: {
        techIcons: {
            drupalIcon: DrupalIcon,
            gatsbyIcon: GatbsyJsIcon,
            graphQLIcon: GrapgQLIcon,
        }
    },
    Project3: {
        techIcons: {
            astroIcon: AstroJsIcon,
            figmaIcon: FigmaIcon,
        }
    }
}

const CARDS_DATA = i18n.PROJECTS.CARDS.map((card, index) => {
    return {
        ...card,
        CARD_IMAGE: index === 0 ? ProjectImage1 : index === 1 ? ProjectImage2 : ProjectImage3 ,
        TAG_ICONS: ICONS[`Project${index + 1}`].techIcons
    }
})
---

<section class="mt-14">
    {CARDS_DATA.map(({ CARD_TITLE, CARD_DESCRIPTION_N1, CARD_DESCRIPTION_N2, CARD_URL,TAG_ICONS, CARD_IMAGE, CARD_IMG_ALT }) => (
        <article class="dark:bg-lightModeExperienceHover dark:bg-opacity-[10%] bg-darkModeColor bg-opacity-[70%] duration-200 hover:shadow-[0_4px_50px_0px_rgba(0,0,0,0.4)] rounded-2xl h-full flex flex-col justify-between cursor-pointer" redirect-url={CARD_URL}>
            <img src={CARD_IMAGE.src} class="p-2 rounded-[19px]" alt={CARD_IMG_ALT}/>
            <div class="px-5 sm:gap-y-5 gap-y-3 flex flex-col mt-4 mb-5 flex-grow">
                <h4 class="dark:text-lightModeExperienceHover font-bold min-[941px]:text-[20px] text-base leading-6 text-lightTagIconColor">{CARD_TITLE}</h4>
                <div class="flex flex-col gap-y-2 flex-grow">
                    <p class="text-white min-[941px]:text-base text-sm font-medium">{CARD_DESCRIPTION_N1}</p>
                    <p class="text-white min-[941px]:text-base text-sm font-medium">{CARD_DESCRIPTION_N2}</p>
                </div>
                <div class="items-center justify-between flex">
                    <div class="flex gap-2">
                        {Object.keys(TAG_ICONS).map(key => {
                            const Icon = TAG_ICONS[key];
                            return (
                                <div class="bg-tagsBgColor bg-opacity-[9%] p-2 rounded-[10px]">
                                    <Icon class="h-5 w-5 dark:fill-darkModeOrange fill-lightTagIconColor" />
                                </div>
                            );
                        })}
                    </div>
                    <CardSvg class="cardSvg dark:stroke-darkModeOrange stroke-lightTagIconColor"/>
                </div>
            </div>
        </article>
    ))}
</section>

<script>
    document.querySelectorAll("article").forEach(article => {
        article.addEventListener("click", () => {
            const pageUrl = article.getAttribute("redirect-url");
            if (pageUrl) {
                window.open(pageUrl,'_blank');
            }
        });
    });
</script>

<style>
    section {
        column-gap: 60px;
        display: grid;
        grid-template-columns: repeat(2, minmax(0px,435px));
        justify-content: center;
        row-gap: 40px;
    }

    article > img {
        display: block;
        transition: 300ms ease;
        width: 100%;
    }

    article:hover {
        transform: translateY(10px);
    }

    article div > div > .cardSvg {
        transform: rotate(0deg) scale(0);
        transition: transform 0.3s ease;
    }

    article:hover div > div > .cardSvg {
        transform: rotate(135deg) scale(1);
    }


    @media (width >= 941px) {
        article:nth-child(3n) {
            display: grid;
            grid-auto-flow: dense;
            grid-column: span 2;
            grid-template-columns: repeat(2, 454px);
        }

        article:nth-child(3n) > img {
            height: 332px;
            object-fit: cover;
        }

        article:nth-child(3n) > img:nth-child(1) {
            grid-column-start: 2;
        }
    }

    @media (width <= 941px) {
        section {
            column-gap: 35px;
            margin-inline: 1rem;
        }
        article:nth-child(3n) {
            display:flex;
        }

        article:nth-child(3n) > img {
            height: auto;
            display: block;
        }
    }

    @media (width <= 640px) {
        section {
            display: flex;
            flex-direction: column;
            margin-inline: 1.2rem;
        }

        article:nth-child(3n) {
            display: flex;
        }

        article:nth-child(3n) > img {
            display: block;
            height: auto;
        }
    }
</style>